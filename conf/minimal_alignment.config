/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    cdnaseq-nf Minimal First-Pass Alignment Configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Focuses on QC, trimming, and generating first-pass STAR alignments (P1-Ref and
    conditionally P1-Mut). Skips the full second-pass alignment and most
    downstream analyses. MultiQC will report on the steps performed.
----------------------------------------------------------------------------------------
*/

params {
    // --- Control Flags ---
    skip_star_second_pass       = true   // CRITICAL: Ensures only first-pass is the primary alignment output
    
    skip_fastqc                 = false  // Keep QC
    skip_trimming               = false  // Keep Trimming
    
    perform_mut_ref_alignment   = true   // Allow P1 mutated reference alignment if VCFs present
    skip_p1_mut_if_no_vcf       = true   // Standard behavior

    skip_variant_calling        = true
    skip_splicing_analysis      = true   // Skips Regtools, Portcullis etc.
    skip_quantification         = true   // Skips featureCounts etc.
    skip_multiqc                = false  // Keep MultiQC for summarizing P1 results

    // --- Resource Settings for this Minimal Profile ---
    max_memory                  = '32.GB' // Adjust as needed for typical first-pass
    max_cpus                    = 8       // Adjust as needed
    max_time                    = '120.h'

    // STAR Indexing RAM control for in-workflow (e.g., mutated refs)
    // These might be needed if mutated ref generation is active and system is very low RAM
    star_index_limit_genome_generate_ram = 20000000000 // Example: 20GB
    star_index_genome_sa_sparse_d        = 2
    star_index_genome_chr_bin_nbits      = 16 // For human genome

    config_profile_name         = 'Minimal First-Pass Alignment'
    config_profile_description  = 'Runs QC, trimming, and first-pass STAR alignments (P1-Ref/P1-Mut).'
}

process {
    // General resource settings for this profile
    withLabel:process_low {
        cpus   = { check_max( 2, 'cpus'   ) }
        memory = { check_max( 4.GB * task.attempt, 'memory' ) }
        time   = { check_max( 2.h  * task.attempt, 'time'  ) }
    }
    withLabel:process_medium {
        cpus   = { check_max( 4, 'cpus'   ) }
        memory = { check_max( 16.GB * task.attempt, 'memory' ) } // Increased slightly for STAR P1
        time   = { check_max( 4.h   * task.attempt, 'time'  ) }
    }
    withLabel:process_high { // Should ideally not be hit much if P2 is skipped
        cpus   = { check_max( params.max_cpus, 'cpus'   ) } // Use profile max_cpus
        memory = { check_max( params.max_memory, 'memory' ) } // Use profile max_memory
        time   = { check_max( 8.h   * task.attempt, 'time'  ) }
    }

    withName:FASTQC_RAW { 
        cpus = 2
        memory = 4.GB
        time = 1.h
    }
    withName:FASTQC_TRIM { 
        cpus = 2
        memory = 4.GB
        time = 1.h
    }
    withName:BBDUK_TRIM { 
        cpus = 4
        memory = 8.GB
        time = 2.h
    }

    withName:CREATE_MUT_REF_FASTA { 
        cpus = 2
        memory = 8.GB
        time = 1.h
    }
    
    // STAR_INDEX for mutated references (if params.perform_mut_ref_alignment = true and VCFs exist)
    // This will use params.star_index_... from nextflow.config or this file if overridden
    withName:STAR_INDEX { 
        cpus   = { check_max( params.max_cpus > 8 ? 8 : params.max_cpus, 'cpus' ) } // Cap at 8 or profile max
        memory = { check_max( params.max_memory, 'memory' ) } // Allow more for mutated ref indexing
        time   = { check_max( 4.h  * task.attempt, 'time'  ) }
    } 

    withName:'STAR_ALIGN_P1_.*' { // Covers STAR_ALIGN_P1_REF and STAR_ALIGN_P1_MUT
        cpus   = { check_max( params.max_cpus, 'cpus' ) }
        memory = { check_max( params.max_memory, 'memory' ) }
        time   = { check_max( 6.h  * task.attempt, 'time'  ) }
    }
    
    // Downstream processes that run on P1 outputs
    withName:MARK_DUPLICATES_PICARD { 
        cpus = 2
        memory = 8.GB
        time = 1.h
    }
    withName:SAMTOOLS_INDEX { 
        cpus = 1
        memory = 4.GB
        time = 30.min
    }
    
    withName:MULTIQC { 
        cpus = 1
        memory = 4.GB
        time = 30.min
    }
}

// Note: With this profile, primary outputs of interest will be:
// results/fastqc/
// results/trimmed/
// results/alignment/pass1_ref/ (P1 reference alignments)
// results/alignment/pass1_mut/ (P1 mutated reference alignments, if VCFs provided)
// results/bam_processing/markdup/ (P1 marked duplicates)
// results/multiqc/
