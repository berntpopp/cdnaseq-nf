/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.output_dir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode ?: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.output_dir}/pipeline_info" },
            mode: params.publish_dir_mode ?: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC_RAW {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.output_dir}/fastqc/raw" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{html,zip}"
        ]
    }

    withName: FASTQC_TRIM {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.output_dir}/fastqc/trimmed" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{html,zip}"
        ]
    }

    withName: BBDUK_TRIM {
        ext.args = 'ktrim=r k=23 mink=11 hdist=1 tpe tbo qtrim=rl trimq=20 minlen=36'
        publishDir = [
            path: { "${params.output_dir}/trimmed" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.fastq.gz"
        ]
    }

    withName: CREATE_MUT_REF_FASTA {
        publishDir = [
            path: { "${params.output_dir}/references/mutated/${meta.patient_id}" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{fa,fai,dict}"
        ]
    }

    withName: STAR_INDEX {
        publishDir = [
            path: { "${params.output_dir}/references/star_indices" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "star_index_*"
        ]
    }

    withName: 'STAR_ALIGN_P1_.*' {
        ext.args = '--outSAMtype BAM SortedByCoordinate --outSAMunmapped Within --outSAMattributes Standard --outFilterType BySJout --outFilterMultimapNmax 20 --alignSJoverhangMin 8 --alignSJDBoverhangMin 1 --outFilterMismatchNmax 999 --outFilterMismatchNoverLmax 0.1 --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000'
        publishDir = [
            path: { "${params.output_dir}/alignment/pass1" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{bam,bai,tab,out,Log.final.out}"
        ]
    }

    withName: STAR_ALIGN_P2 {
        ext.args = '--outSAMtype BAM SortedByCoordinate --outSAMunmapped Within --outSAMattributes Standard --outFilterType BySJout --outFilterMultimapNmax 20 --alignSJoverhangMin 8 --alignSJDBoverhangMin 1 --outFilterMismatchNmax 999 --outFilterMismatchNoverLmax 0.1 --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000 --twopassMode Basic'
        publishDir = [
            path: { "${params.output_dir}/alignment/pass2" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{bam,bai,tab,out,Log.final.out}"
        ]
    }

    withName: MARK_DUPLICATES_PICARD {
        ext.args = 'ASSUME_SORTED=true VALIDATION_STRINGENCY=LENIENT TMP_DIR=tmp'
        publishDir = [
            path: { "${params.output_dir}/alignment/marked_duplicates" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{bam,bai,txt}"
        ]
    }

    withName: SPLITNCIGARREADS {
        ext.args = '--rf ReassignOneMappingQuality --RMQF 255 --RMQT 60 --U ALLOW_N_CIGAR_READS'
        publishDir = [
            path: { "${params.output_dir}/alignment/splitn" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{bam,bai}"
        ]
    }

    withName: GATK_HAPLOTYPECALLER_RNA {
        ext.args = '--dont-use-soft-clipped-bases --standard-min-confidence-threshold-for-calling 20'
        publishDir = [
            path: { "${params.output_dir}/variant_calling" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{vcf.gz,vcf.gz.tbi}"
        ]
    }

    withName: 'REGTOOLS_.*' {
        publishDir = [
            path: { "${params.output_dir}/splicing/regtools" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{junc,bed}"
        ]
    }

    withName: PORTCULLIS {
        publishDir = [
            path: { "${params.output_dir}/splicing/portcullis" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{tab,bed}"
        ]
    }

    withName: FEATURECOUNTS {
        publishDir = [
            path: { "${params.output_dir}/quantification" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.{txt,summary}"
        ]
    }

    withName: MULTIQC {
        publishDir = [
            path: { "${params.output_dir}/multiqc" },
            mode: params.publish_dir_mode ?: 'copy',
            pattern: "*.html"
        ]
    }

}
